[project]
name = "luma"
version = "0.1.0"
description = "Conversational AI Service for Patient Appointment Management"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "sqlmodel>=0.0.14",
    "anthropic>=0.7.0",
    "httpx>=0.25.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "python-dotenv>=1.0.0",
    "tiktoken>=0.5.0",
    "cuid2>=2.0.0",
    "limits>=3.6.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.0",
    "pytest-watch>=4.2.0",
    "coverage>=7.3.0",
    "httpx>=0.25.0",  # For testing FastAPI

    # Linting & Type Checking
    "mypy>=1.7.0",
    "ruff>=0.1.6",

    # Security
    "bandit>=1.7.5",

    # Development
    "ipython>=8.17.0",
    "pre-commit>=3.5.0",

    # Type Stubs
    "types-python-jose>=3.3.4",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py313"
line-length = 120
include = ["app/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
preview = true

# see https://docs.astral.sh/ruff/rules for more info on the rules
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
]

[tool.ruff.lint.per-file-ignores]
"app/**/__init__.py" = ["F401"]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
files = "app/**/*.py"

explicit_package_bases = true
check_untyped_defs = true
ignore_missing_imports = false
strict_equality = true

# Automatically treat arguments with a default of None as Optional[<type>]
implicit_optional = true

enable_error_code = ["possibly-undefined"]

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "app/__init__.py",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B104"]  # Skip hardcoded_bind_all_interfaces for development server
